{"version":3,"file":"static/js/499.b2f16364.chunk.js","mappings":"4MACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAO,gBAAKC,UAAWC,EAAa,SAAEF,EAAMG,UAC9C,E,SCHA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BC+DnI,EAzDkB,SAACH,GACjB,OAAoCI,EAAAA,EAAAA,WAAS,GAAM,eAA5CC,EAAU,KAAEC,EAAa,KAC1BC,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UAoBrB,OACE,UAAC,EAAAE,SAAQ,YACP,SAAC,KAAM,CAACC,KAAQN,EAAYO,QAAW,SAACC,GACtC,MAAO,kEACT,KACA,SAAC,EAAI,WACH,kBACEC,QAdiB,WACvBR,GAAc,EAChB,EAaQL,UAAWC,EACXa,SA3BR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBX,EAAeY,QAAQC,MACvCC,EAAcZ,EAAaU,QAAQC,MAIzCpB,EAAMsB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GAClD,EAkBoC,UAE3BrB,EAAMyB,YACL,gBAAKxB,UAAWC,EAAgB,UAC9B,SAACwB,EAAA,EAAc,OAInB,iBAAKzB,UAAWC,EAAgB,WAC9B,kBAAOyB,QAAQ,SAAQ,qBACvB,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKvB,QAEtC,iBAAKN,UAAWC,EAAgB,WAC9B,kBAAOyB,QAAQ,OAAM,mBACrB,qBAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKrB,QAEpC,gBAAKR,UAAWC,EAAgB,UAC9B,mBAAQ8B,QA7BY,WAC5B1B,GAAc,EAChB,EA2BoDL,UAAU,MAAK,gCAMrE,E,kBCpCA,EApBkB,WAChB,OAA8BgC,EAAAA,EAAAA,GAAQC,EAAAA,IAA/BC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OACdC,GAAUC,EAAAA,EAAAA,OAEhBC,EAAAA,EAAAA,YAAU,WACM,cAAXH,GAEDC,EAAQG,KAAK,UAGjB,GAAG,CAACJ,EAAQC,IAOZ,OAAO,SAAC,EAAS,CAACZ,UAAwB,YAAXW,EAAsBd,WAL7B,SAACmB,GACvBN,EAAYM,EAEd,GAGF,C","sources":["webpack://react-complete-guide/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://react-complete-guide/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuotes.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__b+yjy\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__sksS3\",\"loading\":\"QuoteForm_loading__SVpmm\",\"control\":\"QuoteForm_control__BcY4C\",\"actions\":\"QuoteForm_actions__UfN5T\"};","import { Fragment, useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusHandler = () => {\n    setIsEntering(true);\n  };\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  }\n  return (\n    <Fragment>\n      <Prompt when = {isEntering} message = {(location) => {\n        return 'Are you sure, you want to leave? all your form data will be lost';\n      }}/>\n      <Card>\n        <form\n          onFocus={formFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick = {finishEnteringHandler} className=\"btn\">Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from \"../lib/api\";\r\n\r\nconst NewQuotes = () => {\r\n  const {sendRequest, status} = useHttp(addQuote);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(status === 'completed')\r\n    {\r\n      history.push('/quotes');\r\n\r\n    }\r\n  }, [status, history])\r\n\r\n  const addQuoteHandler = (quoteData) => {\r\n    sendRequest(quoteData);\r\n\r\n  };\r\n\r\n  return <QuoteForm isLoading = {status === 'pending'} onAddQuote={addQuoteHandler}></QuoteForm>;\r\n};\r\n\r\nexport default NewQuotes;\r\n"],"names":["props","className","classes","children","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","Fragment","when","message","location","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"sourceRoot":""}