{"version":3,"file":"static/js/808.424c7169.chunk.js","mappings":"4MACA,EAAuB,wB,SCgBvB,EAdkB,SAACA,GACjB,OACE,gBAAIC,UAAWC,EAAa,WAC1B,+BACE,iCACE,uBAAIF,EAAMG,UAEZ,gCAAaH,EAAMI,aAErB,SAAC,KAAI,CAACH,UAAU,MAAMI,GAAE,kBAAeL,EAAMM,GAAE,aAAY,+BAGjE,ECdA,EAAuB,wBAAvB,EAAyD,2BCmDzD,EArCkB,SAACN,GACjB,IAVkBO,EAAQC,EAUpBC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAIXC,EAAiD,QAFnC,IAAIC,gBAAgBH,EAASI,QAEVC,IAAI,QAErCC,GAjBYV,EAiBcP,EAAMO,OAjBZC,EAiBoBK,EAhBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOb,GAAKc,EAAOd,GAAK,GAAK,EAE7Ba,EAAOb,GAAKc,EAAOd,GAAK,GAAK,CAExC,KAkBA,OACE,UAAC,EAAAe,SAAQ,YACP,gBAAKpB,UAAWC,EAAgB,UAC9B,oBAAQoB,QAVe,WAC3Bb,EAAQc,KAAK,CACXC,SAAWb,EAASa,SACpBT,OAAM,gBAAYF,EAAqB,MAAQ,QAEnD,EAK4C,kBAC9BA,EAAqB,aAAe,kBAG9C,eAAIZ,UAAWC,EAAa,SACzBe,EAAaQ,KAAI,SAACC,GAAK,OACtB,SAAC,EAAS,CAERpB,GAAIoB,EAAMpB,GACVF,OAAQsB,EAAMtB,OACdD,KAAMuB,EAAMvB,MAHPuB,EAAMpB,GAIX,QAKZ,E,2BCjDA,EAA2B,gCCW3B,EATsB,WACpB,OACE,iBAAKL,UAAWC,EAAiB,WAC/B,6CACA,SAAC,KAAI,CAACD,UAAU,MAAMI,GAAK,aAAY,2BAG7C,EC6BA,EA/BkB,WAChB,OAA0DsB,EAAAA,EAAAA,GAAQC,EAAAA,IAAc,GAAzEC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OAAeC,EAAY,EAAnBC,KAAqBC,EAAK,EAALA,MAMjD,OAJAC,EAAAA,EAAAA,YAAU,WACRL,GACF,GAAG,CAACA,IAEU,YAAXC,GAEM,gBAAK7B,UAAU,WAAU,UAC9B,SAACkC,EAAA,EAAc,MAIhBF,GAEM,cAAGhC,UAAU,oBAAmB,SAAEgC,IAG7B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,QAK1D,iCACE,6CACA,SAAC,EAAS,CAAC7B,OAAUwB,QALhB,SAAC,EAAa,GAQzB,C","sources":["webpack://react-complete-guide/./src/components/quotes/QuoteItem.module.css?127c","components/quotes/QuoteItem.js","webpack://react-complete-guide/./src/components/quotes/QuoteList.module.css?9d5d","components/quotes/QuoteList.js","webpack://react-complete-guide/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuoteItem_item__ARxr2\"};","import { Link} from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to = {`/quotes/${props.id}/comments`}>View FullScreen</Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuoteList_list__540Ja\",\"sorting\":\"QuoteList_sorting__I2AnC\"};","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n  const changeSortingHandler = () => {\n    history.push({\n      pathname : location.pathname,\n      search : `?sort=${isSortingAscending ? 'dsc' : 'asc'}`\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__J3sXQ\"};","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to = '/new-quote'>Add a Quote</Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","\r\nimport { useEffect } from 'react';\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'\r\n\r\nconst AllQuotes = () => {\r\n  const {sendRequest, status, data : loadedQuotes, error} = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if(status === 'pending')\r\n  {\r\n    return <div className='centered'>\r\n      <LoadingSpinner/>\r\n    </div>\r\n  }\r\n\r\n  if(error)\r\n  {\r\n    return <p className='centered focussed'>{error}</p>\r\n  }\r\n\r\n  if(status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0))\r\n  {\r\n    return <NoQuotesFound/>\r\n  }\r\n  return (\r\n    <>\r\n      <h1>All Quotes Page</h1>\r\n      <QuoteList quotes = {loadedQuotes}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllQuotes;\r\n"],"names":["props","className","classes","text","author","to","id","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","Fragment","onClick","push","pathname","map","quote","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"sourceRoot":""}