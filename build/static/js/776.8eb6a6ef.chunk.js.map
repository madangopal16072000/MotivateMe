{"version":3,"file":"static/js/776.8eb6a6ef.chunk.js","mappings":"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","sources":["webpack://react-complete-guide/./src/components/comments/CommentItem.module.css?204f","components/comments/CommentItem.js","webpack://react-complete-guide/./src/components/comments/CommentsList.module.css?06d6","components/comments/CommentsList.js","webpack://react-complete-guide/./src/components/comments/Comments.module.css?d88e","webpack://react-complete-guide/./src/components/comments/NewCommentForm.module.css?81c1","components/comments/NewCommentForm.js","components/comments/Comments.js","webpack://react-complete-guide/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","pages/QuoteDetails.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CommentItem_item__RL34i\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"CommentsList_comments__M3j5A\"};","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"Comments_comments__Nd1My\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewCommentForm_form__srf2N\",\"loading\":\"NewCommentForm_loading__rPvhr\",\"control\":\"NewCommentForm_control__kcaqw\",\"actions\":\"NewCommentForm_actions__-83VN\"};","import { useEffect, useRef } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const {sendRequest, status, error} = useHttp(addComment);\n\n  const commentTextRef = useRef();\n  const {onAddedComment} = props;\n  useEffect(() => {\n    if(status === 'completed' && !error)\n    onAddedComment();\n\n  }, [onAddedComment, status, error])\n  const enteredText = commentTextRef.current;\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n    sendRequest({commentData : {text : enteredText}, quoteID : props.quoteID})\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && <div className='centered'>\n        <LoadingSpinner/>\n        </div>}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const {sendRequest, status, data : loadedComments} = useHttp(getAllComments);\n\n  const {quoteID} = params;\n  useEffect(() => {\n    sendRequest(quoteID);\n  }, [sendRequest, quoteID]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteID);\n  }, [sendRequest, quoteID])\n\n  let comments;\n  if(status === 'pending')\n  {\n    comments = <div className='centered'>\n      <LoadingSpinner/>\n    </div>\n  }\n\n  if(status === 'completed' && (loadedComments && loadedComments.length > 0))\n  {\n    comments = <CommentsList comments = {loadedComments}/>\n  }\n\n  if(status === 'completed' && (!loadedComments || loadedComments.length === 0))\n  {\n    comments = <div className='centerd'>No comments were added yet</div>\n  }\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteID = {params.quoteID} onAddedComment = {addedCommentHandler}/>}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__eo6Mb\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useEffect } from \"react\";\r\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\n\r\n\r\nconst QuoteDetails = () => {\r\n  const params = useParams();\r\n  const match = useRouteMatch();\r\n\r\n  const {sendRequest, status, data : loadedQuote, error} = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(params.quoteID)\r\n  }, [sendRequest, params.quoteID])\r\n\r\n\r\n  if(status === 'pending')\r\n  {\r\n    return <div className=\"centered\">\r\n      <LoadingSpinner/>\r\n    </div>\r\n  }\r\n\r\n  if(error)\r\n  {\r\n    return <p className=\"centered\">{error}</p>\r\n  }\r\n  if (!loadedQuote) {\r\n    return <p>Quote not Found</p>;\r\n  }\r\n  return (\r\n    <>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Route path = {match.path} exact>\r\n      <div className=\"centered\">\r\n        <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n          Load Comments\r\n        </Link>\r\n      </div>\r\n\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuoteDetails;\r\n"],"names":["props","className","classes","text","comments","map","comment","id","useHttp","addComment","sendRequest","status","error","commentTextRef","useRef","onAddedComment","useEffect","enteredText","current","submitFormHandler","event","preventDefault","commentData","quoteID","onSubmit","LoadingSpinner","htmlFor","rows","ref","useState","isAddingComment","setIsAddingComment","params","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","length","onClick","author","match","useRouteMatch","getSingleQuote","loadedQuote","path","exact","to","url"],"sourceRoot":""}